<!-- Modal -->
<dialog id="writeAnnotation">
	<p id="annotationHeader">Write annotation: </p>
	<div class="row">
		<div class="col">
			<textarea name="annotaition-comment" id="annotation-comment" cols="20" rows="10"></textarea>
			<input type="hidden" name="annotation-type" id="annotation-type">
			<input type="hidden" name="annotation-system-name" id="annotation-system-name">
		</div>
		<div class="col">
			<p>Observations on chosen hour:</p>
			<ul id="listHourObs"></ul>
		</div>
		<br>
	</div>
	<br>
	<div class="row">
		<div class="col">
			<button id="saveAnnotation" onclick="saveAnnotation()">Save</button>
			<button id="closeAnnotation" onclick="closeDialog()">Cancel</button>
		</div>
		<div class="col">
			<button id="invalidateObservation" value="add" onclick="invalidateObservation(this)">Invalidate observations</button>
		</div>
	</div>
</dialog>

<script>
	var dialogWindow = document.getElementById("writeAnnotation");
	function closeDialog() { 
		dialogWindow.close(); 
	}

	function saveAnnotation() { 
		var dataset = document.getElementById("datasets").value;
		var systemName = document.getElementById("annotation-system-name").value;
		var comment = document.getElementById("annotation-comment").value;
		var type = document.getElementById("annotation-type").value;
		var creationDate = new Date();

		if (systemName in annotations) {
			deleteAnnotation(annotations[systemName][0].id);
			deleteAnnotationMark(systemName, type);

			if (comment === "") {
				closeDialog();
				delete annotations[systemName];
				return;
			}
		}

		if (comment === "") {
			closeDialog();
			return;
		}

		var xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function() {
			if (this.readyState == 4 && this.status == 201) {
				closeDialog();
				var result = JSON.parse(this.responseText);
				if (systemName in annotations) {
					annotations[systemName][0].comment = comment;
					annotations[systemName][0].creationDate = creationDate;
					annotations[systemName][0].id = result.annotation.id;
				} else {
					annotations[systemName] = [];
					annotations[systemName].push({
						"comment": result.annotation.comment,
							"creationDate": result.annotation.creationDate,
							"type": result.annotation.type,
							"id": result.annotation.id
					});
				}
				
				var parentItem = null;
				if (type === "day") {
					parentItem = document.querySelector("[data-date-key='"+systemName+"']");
				} else {
					parentItem = document.querySelector("[data-hour-key='"+systemName+"']");
				}

				var symbol = document.createElement("i");
				symbol.className += "far fa-comment note";
				var tooltip = document.createElement("div");
				tooltip.innerHTML = comment;
				tooltip.className = "overlay";

				symbol.appendChild(tooltip);				
				parentItem.appendChild(symbol);
			}
		};
		xmlhttp.open("POST", "/annotations", true);
		xmlhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
		xmlhttp.send(JSON.stringify({systemName, dataset, type, creationDate, comment}));

	} 

	function deleteAnnotation(id) {
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function() {
			if (this.readyState == 4 && this.status == 204) {}
		};
		xmlhttp.open("DELETE", ("/annotations/"+id), true);
		xmlhttp.send();
	}

	function deleteAnnotationMark(systemName, dateType) {
		if (dateType === 'day') {
			var day = document.querySelector("[data-date-key='"+systemName+"']");
			day.removeChild(day.lastChild);
		} else {
			var hour = document.querySelector("[data-hour-key='"+systemName+"']");
			hour.removeChild(hour.lastChild);
		}
	}

	function invalidateObservation(theObj) {
		var dataset = document.getElementById("datasets").value;
		var systemName = document.getElementById("annotation-system-name").value;
		var comment = document.getElementById("annotation-comment").value;
		var type = document.getElementById("annotation-type").value;
		var creationDate = new Date();

		if (theObj.value === "delete") {
			allowObservationOnServer(systemName, function() {
				location.reload();
			})
		} else {
			invalidateObservationFromServer(systemName, dataset, type, creationDate, comment, function() {
				location.reload();
			})
		}
	}

	function invalidateSingleObservation(theObj, event) {
		var dataset = document.getElementById("datasets").value;
		var systemName = theObj.getAttribute("data-system-name");
		var comment = document.getElementById("annotation-comment").value;
		var type = document.getElementById("annotation-type").value;
		var creationDate = new Date();

		if (event === "delete") {
			allowObservationOnServer(systemName, function() {
				theObj.classList.remove("btn-primary");
				theObj.classList += " btn-secondary";
				theObj.innerHTML = "Invalidate";
				theObj.addEventListener("click", function() {
					invalidateSingleObservation(this, "create");
				});
			})
		} else {
			invalidateObservationFromServer(systemName, dataset, type, creationDate, comment, function() {
				theObj.classList.remove("btn-secondary");
				theObj.classList += " btn-primary";
				theObj.innerHTML = "Allow";
				theObj.addEventListener("click", function() {
					invalidateSingleObservation(this, "delete");
				});
			})
		}
	}

	function allowObservationOnServer(systemName, _callback) {
		var xmlhttp = new XMLHttpRequest();
			xmlhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 204) {
					_callback();
				}
			};
			xmlhttp.open("DELETE", ("/observations/"+systemName), true);
			xmlhttp.send();
	}

	function invalidateObservationFromServer(systemName, dataset, type, creationDate, comment, _callback) {
		var xmlhttp = new XMLHttpRequest();
			xmlhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 201) {
					_callback();
				}
			};
			xmlhttp.open("POST", "/observations", true);
			xmlhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
			xmlhttp.send(JSON.stringify({systemName, dataset, type, creationDate, comment}));
	}
</script>