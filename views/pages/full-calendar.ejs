<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body class="container">

	<header>
		<% include ../partials/header %>
	</header>
	<br>
	<input type="date" name="first-date" id="firstDate" onchange="dateChanged()">
	<span>-</span>
	<input type="date" name="last-date" id="lastDate" onchange="dateChanged()">
	<select style="float:right" name="specific-day" id="specificDay" onchange="specificDayChange(this.value)">
		<option value=""></option>
		<option value="0">Monday</option>
		<option value="1">Tuesday</option>
		<option value="2">Wednesday</option>
		<option value="3">Thursday</option>
		<option value="4">Friday</option>
		<option value="5">Saturday</option>
		<option value="6">Sunday</option>
	</select>
	<span style="float:right">Choose specific weekday:</span>
	<div style="overflow-x: scroll">
		<table id="fullCalendar"></table>
	</div>
	<footer>
		<% include ../partials/footer %>
	</footer>

</body>
<% include ../partials/annotations %>
</html>

<script src="scripts/data-processing.js"></script>

<script type='text/javascript'>		
	var fullCalendar;
	var dataset = document.getElementById("datasets");
	var event = new Event('change');
	dataset.dispatchEvent(event);

	function datasetChange() {
		var dataset = document.getElementById("datasets").value;		

		var fullCalendar = document.getElementById("fullCalendar");			
		while (fullCalendar.firstChild) {
			fullCalendar.removeChild(fullCalendar.firstChild);
		}

		getDataset(dataset);
	}

	function getDataset(dataset) {
		annotations = [];
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function() {
			if (this.readyState == 4 && this.status == 200) {
				var result = JSON.parse(this.responseText);
				rawData = result.data;
				for (annotation in result.annotations)
				{
					if (!(result.annotations[annotation].systemName in annotations)) {
						annotations[result.annotations[annotation].systemName] = [];
					}

					annotations[result.annotations[annotation].systemName].push({
						"comment": result.annotations[annotation].comment,
						"creationDate": result.annotations[annotation].creationDate,
						"type": result.annotations[annotation].type,
						"id": result.annotations[annotation].id
					});
				}
				
				processData();
				createVisualizations();
			}
		};
		xmlhttp.open("GET", ("/datasets/"+dataset), true);
		xmlhttp.send();
	}

	function createVisualizations() {
		fullCalendar = new FullCalendar(data['hourByDay'], data['sumOfEachDay'], data['firstRecordedDay'], data['lastRecordedDay'], data['maxHourOfDay'], data["mostInADay"], "");
		fullCalendar.create();
		fullCalendar.setDatePickers(data['firstRecordedDay'], data['lastRecordedDay']);
		document.getElementById("specificDay").value = "";
	}

	function dateChanged() {
		var firstDate = document.getElementById("firstDate");	
		var lastDate = document.getElementById("lastDate");	
		
		fullCalendar.update(firstDate.value, lastDate.value, "");
		document.getElementById("specificDay").value = "";
	}

	function specificDayChange(day) {
		var firstDate = data['firstRecordedDay'].getFullYear() +"-"+ (data['firstRecordedDay'].getMonth()+1) +"-"+ data['firstRecordedDay'].getDate();
		var lastDate = data['lastRecordedDay'].getFullYear() +"-"+ (data['lastRecordedDay'].getMonth()+1) +"-"+ data['lastRecordedDay'].getDate();
		
		fullCalendar.setDatePickers(data['firstRecordedDay'], data['lastRecordedDay']);		
		fullCalendar.update(firstDate, lastDate, day);
	}
</script>