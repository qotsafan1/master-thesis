<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body class="container">

	<header>
		<% include ../partials/header %>
	</header>
	<br>
	<div class="row">
		<div class='col-sm-1'>
			<p class="font-weight-bolder">Dataset:</p>			
		</div>
		<div class='col-lg-2'>
			<select name="datasets" id="datasets" onchange="datasetChange()">
				<option value="itch_tbc.csv">itch_tbc.csv</option>
				<option value="ptsd.csv">ptsd.csv</option>
			</select>
			</div>
		</div>
		<div class="row">
			<div class='col-sm-1'></div>
			<div class=''>
				<p class="h6">Date from:</p>
			</div>
			<div class='col-sm-3'>
				<p  class="h6"id="firstDate"></p>
			</div>
			<div class=''>
					<p class="h6">Date to:</p>
				</div>
			<div class='col-sm-4'>
				<p class="h6" id="lastDate"></p>
			</div>
		</div>
	<div class="row">
		<div class='col-sm-1 graph' id='timeChart'></div>
	</div>

	<div class="row">
		<div class='col-lg-5 graph' id='dayBarChart'></div>
		<div class='col-lg-5 graph' id='hourBarChart'></div>
	</div>
	<div class="row">
			<div class='col-sm-7 graph' id='monthBarChart'></div>
		</div>

	<script>
		var month = new Array(12);
			month[0] = "January";
			month[1] = "February";
			month[2] = "March";
			month[3] = "April";
			month[4] = "May";
			month[5] = "June";
			month[6] = "July";
			month[7] = "August";
			month[8] = "September";
			month[9] = "October";
			month[10] = "November";
			month[11] = "December";

		var weekday = new Array(7);
			weekday[0] = "Sunday";
			weekday[1] = "Monday";
			weekday[2] = "Tuesday";
			weekday[3] = "Wednesday";
			weekday[4] = "Thursday";
			weekday[5] = "Friday";
			weekday[6] = "Saturday";

		var childGraphs;
		var unFilteredData;
		//2016-09-05T18:13:46.105Z
		var strictIsoParse = d3.utcParse("%Y-%m-%dT%H:%M:%S.%LZ");
		
		function createVisualization(dataset) {
			childGraphs = [];
			data = [];
			data["byMonth"] = [];
			data["byDay"] = [];
			data['firstMonth'] = 12;
			data['lastMonth'] = 1;		

			d3.csv("data/" + dataset, function(rawData) {
				unFilteredData = rawData;
				console.log(rawData)

				var countMonth = [];
				var countWeekday = [];
				var countHour = [];
				var countEachDay = [];

				for (var i=0; i<24;i++) {
					countHour[i] = 0;
				}

				for (var instance in rawData) {
					var date = Object.keys(rawData[instance])[0]
					if (date !== "date") {
						continue;
					}

					var isoDate = strictIsoParse(rawData[instance][date]);

					var currentMonth = month[isoDate.getMonth()]
					sumData(currentMonth, countMonth);

					var currentDay = weekday[isoDate.getDay()]
					sumData(currentDay, countWeekday);

					sumData(isoDate.getHours(), countHour);

					var dayOfMonth = isoDate.getFullYear() + "-" + (isoDate.getMonth()+1) + "-" + isoDate.getDate();
					if (dayOfMonth in countEachDay) {
						countEachDay[dayOfMonth]++;
					} else {
						countEachDay[dayOfMonth] = 1;					
					}

					//Find first and last month
					if (isoDate.getMonth() < data["firstMonth"]) {
						data["firstMonth"] = isoDate.getMonth();
					}
					if (isoDate.getMonth() > data["lastMonth"]) {
						data["lastMonth"] = isoDate.getMonth();
					}
				}

				data['byMonth'] = createBarData(countMonth);
				data['byDay'] = createBarData(countWeekday);
				data['byHour'] = createBarData(countHour);
				data['eachDay'] = [];

				for(var i in countEachDay) {
					data['eachDay'].push({
						"date": new Date(i),
						"sum": countEachDay[i]
					});
				}

				console.log(data)

				var timeChart = createBarChart(
					'timeChart', 
					data['eachDay'],
					900,
					250,
					'time',
					[new Date(2016, data['firstMonth'], 1), new Date(data['lastMonth'] === 11 ? 2017 : 2016, data['lastMonth'] === 11 ? 0 : 11, 1)],
					'default',
					5,
					'time',
					3,
					"Instances per day", 
					"Day", 
					"Instances",
					false,
					true
				);

				var monthChart = createBarChart(
					'monthBarChart', 
					data['byMonth'], 
					500, 
					250,
					'band',
					data['byMonth'], 
					'default',
					-1,
					null,
					null,
					"Instances per month", 
					"Month", 
					"Instances", 
					true,
					false
				);

				var weekdayChart = createBarChart(
					'dayBarChart', 
					data['byDay'], 
					500, 
					250,
					'band',
					data['byDay'], 
					'default',
					-1,
					null,
					null,
					"Instances per weekday", 
					"Weekday", 
					"Instances", 
					true,
					false
				);
				childGraphs.push(weekdayChart);

				var hourChart = createBarChart(
					'hourBarChart', 
					data['byHour'],
					500,
					250,
					'linear',
					[0,24],
					'default',
					24,
					null,
					null,
					"Instances per hour", 
					"Hour", 
					"Instances",
					true,
					false
				);
				childGraphs.push(hourChart);

			});
		}

		function sumData(instance, sumArray) {
			if (instance in sumArray) {
				sumArray[instance]++;
			} else {
				sumArray[instance] = 1;
			}
		}

		function createBarData(countArray) {
			var barData = [];
			for (var i in countArray) {
				barData.push({
						"type": i,
						"sum": countArray[i]
				});
			}
			return barData;
		}

		function createBarChart(
			elementId, 
			data, 
			width, 
			height,
			xScaleType,
			xScaleData,
			yScaleType,
			ticksAmount,
			ticksFormat,
			bWidth,
			titleText, 
			xAxisLabel, 
			yAxisLabel, 
			mouseInfo,
			brush
		) {
			//var newDiv = document.createElement('div');
			//newDiv.setAttribute('id', elementId);
			//newDiv.setAttribute('class', 'col-sm');
			//document.getElementById("visulization").appendChild(newDiv);

			var barChart = new BarChart(
				data,
				elementId,
				width,
				height,
				xScaleType,
				xScaleData,
				yScaleType,
				ticksAmount,
				ticksFormat,
				bWidth,
				titleText,
				xAxisLabel,
				yAxisLabel,				
				mouseInfo,
				brush
			);

			barChart.create();

			return barChart;
		}

		function setClockTo(dateObject, time) {
			dateObject.setHours(time[0]);
			dateObject.setMinutes(time[1]);
			dateObject.setSeconds(time[2]);
		}
		
		function updateChildGraphs(firstDate, lastDate) {
			setClockTo(firstDate, [0,0,0]);
			setClockTo(lastDate, [23,59,59]);
			document.getElementById("firstDate").innerHTML = weekday[firstDate.getDay()] + " " + month[firstDate.getMonth()] + " " + firstDate.getDate() + " " + firstDate.getFullYear();
			document.getElementById("lastDate").innerHTML = weekday[lastDate.getDay()] + " " + month[lastDate.getMonth()] + " " + lastDate.getDate() + " " + lastDate.getFullYear();;
			if (childGraphs.length > 0) {
				var countWeekday = [];
				var countHour = [];

				for (var i=0; i<24;i++) {
					countHour[i] = 0;
				}

				for (var instance in unFilteredData) {
					var date = Object.keys(unFilteredData[instance])[0]
					if (date !== "date") {
						continue;
					}
	
					var isoDate = strictIsoParse(unFilteredData[instance][date]);
					if (firstDate > isoDate || lastDate < isoDate) {
						continue;
					}

					var currentDay = weekday[isoDate.getDay()]
					sumData(currentDay, countWeekday);

					sumData(isoDate.getHours(), countHour);
				}
				var weekdayData = createBarData(countWeekday);
				childGraphs[0].updateGraph(weekdayData);
				var hourData = createBarData(countHour);
				childGraphs[1].updateGraph(hourData);

			}
		}


		function datasetChange() {
			var dataset = document.getElementById("datasets").value;
			  
			var graphs = document.getElementsByClassName("graph");
			for (var i in graphs) {				
				while (graphs[i].firstChild) {
					graphs[i].removeChild(graphs[i].firstChild);
				}
			}  				

			createVisualization(dataset);
		}

		createVisualization('itch_tbc.csv');
	</script>

	<footer>
		<% include ../partials/footer %>
	</footer>

</body>
</html>
