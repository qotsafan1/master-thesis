<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body class="container">

	<header>
		<% include ../partials/header %>
	</header>
	<br>	
	<div class="row">
		<div class="col-lg-5">
			<div class="row">
				<table id="calendar"></table>
			</div>
			<div id="informationPanel">
				<p class="header">Average observations</p>
				<div id="dayComparisonChart" class="graph"></div>
				<p class="detail" id="averageDay"></p>
				<p class="detail" id="averageWorkday"></p>
				<p class="detail" id="averagePerWeekday"></p>
				<p class="detail" id="averageHourPerWeekday"></p>
				<div id="minuteBreakdown"></div>
			</div>
		</div>
		<div class="col-lg-7">
			<table id="timetable"></table>
		</div>
	</div>
	<footer>
		<% include ../partials/footer %>
	</footer>

</body>
<% include ../partials/annotations %>
</html>

<script src="scripts/data-processing.js"></script>

<script type='text/javascript'>	
	var childGraphs;
	var currentDayComparisonChart;
	var weekDayComparisonChart;
	var dataset = document.getElementById("datasets");
	var event = new Event('change');
	dataset.dispatchEvent(event);	

	function removeAllVisualizations() {
		var graphs = document.getElementsByClassName("graph");
		for (var i in graphs) {				
			while (graphs[i].firstChild) {
				graphs[i].removeChild(graphs[i].firstChild);
			}
		}

		var calendar = document.getElementById("calendar");			
		while (calendar.firstChild) {
			calendar.removeChild(calendar.firstChild);
		}

		var timetable = document.getElementById("timetable");			
		while (timetable.firstChild) {
			timetable.removeChild(timetable.firstChild);
		}

		var barChartBreakdown = document.getElementById("minuteBreakdown");			
		while (barChartBreakdown.firstChild) {
			barChartBreakdown.removeChild(barChartBreakdown.firstChild);
		}

		var graphs = document.getElementsByClassName("graph");
		for (var i in graphs) {				
			while (graphs[i].firstChild) {
				graphs[i].removeChild(graphs[i].firstChild);
			}
		}
		
		document.getElementById("averageHourPerWeekday").innerText = "";
	}	

	function createVisualizations() {
		var firstDate = new Date(data['firstYear'], data['firstMonth'], 1);				
		var lastDate = new Date(data['lastRecordedDay'].getMonth() === 11 ? data['lastYear']+1 : data['lastYear'], data['lastRecordedDay'].getMonth() === 11 ? 0 : (data['lastRecordedDay'].getMonth()+1), 1);

		var calendarObject = new Calendar(data['lastRecordedDay'], data['sumOfEachDay'], data['mostInADay'], data);
		calendarObject.create();
		calendarObject.addDistribution();

		var timetableObject = new TimeTable(data['lastRecordedDay'], calendarObject.week, data['hourByDay'], calendarObject.month, calendarObject.year, data['maxHourOfDay']);
		timetableObject.create();        

		calendarObject.timeTable = timetableObject;
		timetableObject.calendar = calendarObject;
/*
		var informationPanel = new InformationPanel(data);
		informationPanel.setAverageWorkday();
		informationPanel.setChosenWeekdayAverage(data['lastRecordedDay'].getDay());


		calendarObject.informationPanel = informationPanel;
		timetableObject.informationPanel = informationPanel;
*/

		var dayComparisonChart = new ComparisonChart(			
			'dayComparisonChart', 
			300, 
			70,
			{top: 30, right: 5, bottom: 5, left: 5},
			"Weekday vs. weekend day",
			{
				"xBarFontSize": "12px",
				"titleFontSize": "13px"
			}
		);
		dayComparisonChart.compare(
			data["averageWorkday"],
			data["averageWeekend"],
			"Weekday",
			"Weekend"
		);

		currentDayComparisonChart = new ComparisonChart(			
			'dayComparisonChart', 
			300, 
			70,
			{top: 30, right: 5, bottom: 5, left: 5},
			"Chosen day vs. overall",
			{
				"xBarFontSize": "12px",
				"titleFontSize": "13px"
			}
		);
		currentDayComparisonChart.compare(
			data["sumOfEachDay"][data["lastRecordedDay"].getFullYear() + "-" + (data["lastRecordedDay"].getMonth()+1) + "-" + data["lastRecordedDay"].getDate()],
			data["averageDay"],
			"Chosen day",
			"Overall average day"
		);

		var day = data["lastRecordedDay"].getDay() === 0 ? 6 : (data["lastRecordedDay"].getDay()-1);
		weekDayComparisonChart = new ComparisonChart(			
			'dayComparisonChart', 
			300, 
			70,
			{top: 30, right: 5, bottom: 5, left: 5},
			("Average " + weekday[day] + " vs. chosen " + weekday[day]),
			{
				"xBarFontSize": "12px",
				"titleFontSize": "13px"
			}
		);

		weekDayComparisonChart.compare(
			data["sumOfEachDay"][data["lastRecordedDay"].getFullYear() + "-" + (data["lastRecordedDay"].getMonth()+1) + "-" + data["lastRecordedDay"].getDate()],
			data["averagePerWeekday"][day],
			("Chosen " + weekday[day]),
			("Average " + weekday[day])
		);
	}

	function updateAverages(date) {
		var dayString = date.getFullYear() + "-" + (date.getMonth()+1) + "-" + date.getDate();
		var day = date.getDay() === 0 ? 6 : (date.getDay()-1);
		if (dayString in data["sumOfEachDay"]) {
			currentDayComparisonChart.update(
				data["sumOfEachDay"][dayString],
				data["averageDay"],
				"Chosen day",
				"Overall average day"
			);
			
			weekDayComparisonChart.update(
				data["sumOfEachDay"][dayString],
				data["averagePerWeekday"][day],
				("Chosen " + weekday[day]),
				("Average " + weekday[day])
			);
		} else {
			currentDayComparisonChart.update(
				0,
				data["averageDay"],
				"Chosen day",
				"Overall average day"
			);

			weekDayComparisonChart.update(
				0,
				data["averagePerWeekday"][day],
				("Chosen " + weekday[day]),
				("Average " + weekday[day])
			);
		}
		weekDayComparisonChart.updateTitle(("Average " + weekday[day] + " vs. chosen " + weekday[day]));

	}
</script>