<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
</head>
<body class="container">

	<header>
		<% include ../partials/header %>
	</header>
	<div class="row" id="colorScales">
	</div>
	<div style="overflow-x: hidden">
		<table id="fullCalendar"></table>
	</div>
	<br>
	<div class="row" id="informationPanel">
		<div class="col">
			<table id="trivia"></table>
		</div>
	</div>
	<br>
	<footer>
		<% include ../partials/footer %>
	</footer>

</body>
<% include ../partials/annotations %>
</html>

<script src="scripts/data-processing.js"></script>

<script type='text/javascript'>
	checkForChosenDataset();
	var fullCalendar;
	var dataset = document.getElementById("datasets");
	var event = new Event('change');
	dataset.dispatchEvent(event);

	function removeAllVisualizations() {
		/*
		var graphs = document.getElementsByClassName("graph");
		for (var i in graphs) {				
			while (graphs[i].firstChild) {
				graphs[i].removeChild(graphs[i].firstChild);
			}
		}
*/
		var fullCalendar = document.getElementById("fullCalendar");			
		while (fullCalendar.firstChild) {
			fullCalendar.removeChild(fullCalendar.firstChild);
		}
		
		var colorScales = document.getElementById("colorScales");
		while (colorScales.firstChild) {
			colorScales.removeChild(colorScales.firstChild);
		}
	}

	function createVisualizations() {
		var lastSession = window.localStorage.getItem('lastSession');
		var newestRecords = [];
		if (lastSession) {
			var lastSessionDate = getCorrectUTCDate(lastSession);
			console.log(lastSessionDate)
			for (var instance in rawData) {
				var date = Object.keys(rawData[instance])[0]
				if (date !== "date") {
					continue;
				}

				if (!rawData[instance][date].includes("-")) {
					strictIsoParse = d3.utcParse("%Y%m%dT%H%M%SZ");
				} else {
					strictIsoParse = d3.utcParse("%Y-%m-%dT%H:%M:%S.%LZ");
				}

				var isoDate = strictIsoParse(rawData[instance][date]);
				if (!isoDate || isoDate === null || isoDate === "") {
					continue;
				}
				if (timezone === "2" && "timezone" in rawData[instance]) {
					var tzString = rawData[instance]["timezone"];
					if (tzString.includes("+")) {
						isoDate.setUTCHours(isoDate.getUTCHours() + parseInt(tzString.slice(1,3)));
					} else if (tzString.includes("-")) {
						isoDate.setUTCHours(isoDate.getUTCHours() - parseInt(tzString.slice(1,3)));
					}
				}
				if (timezone === "1") {
					thisTZDate = new Date(isoDate.getTime())
					isoDate.setUTCMinutes(isoDate.getUTCMinutes() + (-1*thisTZDate.getTimezoneOffset()));
				}

				if (isoDate.getTime() < lastSessionDate.getTime()) {
					continue;
				}

				newestRecords.push(rawData[instance]);
			}
			console.log(newestRecords)

			var newestData = processData(timezone, newestRecords);

			fullCalendar = new FullCalendar(newestData['hourByDay'], newestData['sumOfEachDay'], newestData['firstRecordedDay'], newestData['lastRecordedDay'], newestData['maxHourOfDay'], newestData["mostInADay"], "");
			fullCalendar.create();
	
			new ColorScaleLegend(fullCalendar.dayColorScale, "Color scale for days");
			new ColorScaleLegend(fullCalendar.colorScale, "Color scale for hours");

			var trivia = d3.select("#trivia");
			for (var i in newestData['trivia']) {
				var triviaRow = trivia.append("tr");
				triviaRow.append("td").attr("class", "table-key").text(newestData['trivia'][i].key);
				triviaRow.append("td").attr("class", "table-value").text(newestData['trivia'][i].value);
			}
		} else {
			var firstDate = new Date(Date.UTC(data['firstRecordedDay'].getUTCFullYear(), data['firstRecordedDay'].getUTCMonth(), data['firstRecordedDay'].getUTCDate()));
			firstDate.setUTCHours(0,0,0,0);
	
			var lastDate = new Date(Date.UTC(data['lastRecordedDay'].getUTCFullYear(), data['lastRecordedDay'].getUTCMonth(), data['lastRecordedDay'].getUTCDate()));
			lastDate.setUTCHours(23,59,59);
	
			fullCalendar = new FullCalendar(data['hourByDay'], data['sumOfEachDay'], data['firstRecordedDay'], data['lastRecordedDay'], data['maxHourOfDay'], data["mostInADay"], "");
			fullCalendar.create();
	
			new ColorScaleLegend(fullCalendar.dayColorScale, "Color scale for days");
			new ColorScaleLegend(fullCalendar.colorScale, "Color scale for hours");
		}
	}
</script>